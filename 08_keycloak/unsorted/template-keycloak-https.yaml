apiVersion: v1
items:
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      description: An example Keycloak server with HTTPS
      iconClass: icon-sso
      openshift.io/display-name: Keycloak
      tags: keycloak
      version: 4.0.0.Beta2
    creationTimestamp: 2020-02-20T10:30:28Z
    name: keycloak-https
    namespace: keycloak
    resourceVersion: "363084"
    selfLink: /apis/template.openshift.io/v1/namespaces/keycloak/templates/keycloak-https
    uid: 038055b3-53cc-11ea-8f7e-525400dc1209
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: KEYCLOAK_USER
              value: ${KEYCLOAK_USER}
            - name: KEYCLOAK_PASSWORD
              value: ${KEYCLOAK_PASSWORD}
            - name: DB_VENDOR
              value: ${DB_VENDOR}
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: dns.DNS_PING
            - name: JGROUPS_DISCOVERY_PROPERTIES
              value: dns_query=${APPLICATION_NAME}.${NAMESPACE}.svc.cluster.local
            image: quay.io/keycloak/keycloak:latest
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /auth/realms/master
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            readinessProbe:
              failureThreshold: 10
              httpGet:
                path: /auth/realms/master
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
            securityContext:
              privileged: false
      triggers:
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: keycloak
  - description: Keycloak Server administrator username
    displayName: Keycloak Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: KEYCLOAK_USER
    required: true
  - description: Keycloak Server administrator password
    displayName: Keycloak Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: KEYCLOAK_PASSWORD
    required: true
  - description: DB vendor (H2, POSTGRES, MYSQL or MARIADB)
    displayName: DB Vendor
    name: DB_VENDOR
    required: true
    value: H2
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: This namespace is a part of DNS query sent to Kubernetes API. This
      query allows the DNS_PING protocol to extract cluster members. This parameter
      might be removed once https://issues.jboss.org/browse/JGRP-2292 is implemented.
    displayName: Namespace used for DNS discovery
    name: NAMESPACE
    required: true
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
